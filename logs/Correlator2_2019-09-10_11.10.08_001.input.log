VERS 00000001 5
HEAD 0000131e <?xml version="1.0"?>
<?xml-stylesheet type="text/xsl" href="/resources/transform.xslt"?><header><componentName>correlator</componentName><version>10.5.0.0.357639</version><build>rel/10.5.0.x@357639</build><buildPlatform>amd64-win</buildPlatform><platform>Windows 10 Enterprise</platform><cputype>GenuineIntel family 6 model 14 stepping 3 Intel(R) Core(TM) i7-6600U CPU @ 2.60GHz</cputype><cpus name="cpus">4.00</cpus><javaEnabled>true</javaEnabled><replayLogMode>inputLog</replayLogMode><args><arg>C:\dev\apama_win_full_latest\Apama\bin\correlator.exe</arg><arg>--config</arg><arg>C:\Users\y508970\workspace105\CoffeeFactoryDataSimulator\config\CorrelatorConfig.yaml</arg><arg>--port</arg><arg>15904</arg><arg>--loglevel</arg><arg>INFO</arg><arg>--name</arg><arg>Apama Designer Correlator for CoffeeFactoryDataSimulator(CoffeeFactoryDataSimulator:Correlator2)</arg><arg>-j</arg><arg>--inputLog</arg><arg>logs/Correlator2_${START_TIME}_${ID}.input.log</arg></args><environment><variable>ALLUSERSPROFILE=C:\ProgramData</variable><variable>APAMA_HOME=C:\dev\apama_win_full_latest\Apama</variable><variable>APAMA_WORK=C:\Users\Public\SoftwareAG\ApamaWork_10.5</variable><variable>APPDATA=C:\Users\y508970\AppData\Roaming</variable><variable>COMMONPROGRAMFILES=C:\Program Files\Common Files</variable><variable>COMMONPROGRAMFILES(X86)=C:\Program Files (x86)\Common Files</variable><variable>COMMONPROGRAMW6432=C:\Program Files\Common Files</variable><variable>COMPUTERNAME=SAG-98V9PF2</variable><variable>COMSPEC=C:\Windows\system32\cmd.exe</variable><variable>DEFLOGDIR=C:\ProgramData\McAfee\Endpoint Security\Logs</variable><variable>DRIVERDATA=C:\Windows\System32\Drivers\DriverData</variable><variable>EMPIRUMSERVER=cukuni02.eur.ad.sag</variable><variable>EMPIRUMSERVICEPARTITION=0</variable><variable>EMPSRVLONG=cukuni02.eur.ad.sag</variable><variable>HOMEDRIVE=C:</variable><variable>HOMEPATH=\Users\y508970</variable><variable>LOCALAPPDATA=C:\Users\y508970\AppData\Local</variable><variable>LOGONSERVER=\\CUKDC85</variable><variable>NUMBER_OF_PROCESSORS=4</variable><variable>ONEDRIVE=C:\Users\y508970\OneDrive - Software AG</variable><variable>ONEDRIVECOMMERCIAL=C:\Users\y508970\OneDrive - Software AG</variable><variable>OS=Windows_NT</variable><variable>PATH=C:\dev\apama_win_full_latest\Apama\..\jvm\jvm\jre\bin\server;C:\dev\apama_win_full_latest\Apama\..\jvm\jvm\jre\bin;C:\dev\apama_win_full_latest\Apama\bin;C:\dev\apama_win_full_latest\Apama\..\common\security\openssl\bin;C:\Users\Public\SoftwareAG\ApamaWork_10.5\lib;C:\dev\apama_win_full_latest\Apama\..\jvm\jvm\jre\bin;C:\dev\apama_win_full_latest\Apama\..\jvm\jvm\jre\bin\server;C:\dev\apama_win_full_latest\Apama\..\UniversalMessaging\cplus\lib\x86_64;C:\dev\apama_win_full_latest\Apama\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\PuTTY\;C:\Program Files\SlikSvn\bin;C:\Program Files\dotnet\;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\Program Files\TortoiseSVN\bin;C:\Program Files\TortoiseGit\bin;C:\Users\y508970\AppData\Local\Microsoft\WindowsApps;C:\Users\y508970\AppData\Local\Programs\Git\cmd;C:\Users\y508970\AppData\Local\GitHubDesktop\bin</variable><variable>PATHEXT=.COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC</variable><variable>PROCESSOR_ARCHITECTURE=AMD64</variable><variable>PROCESSOR_IDENTIFIER=Intel64 Family 6 Model 78 Stepping 3, GenuineIntel</variable><variable>PROCESSOR_LEVEL=6</variable><variable>PROCESSOR_REVISION=4e03</variable><variable>PROGRAMDATA=C:\ProgramData</variable><variable>PROGRAMFILES=C:\Program Files</variable><variable>PROGRAMFILES(X86)=C:\Program Files (x86)</variable><variable>PROGRAMW6432=C:\Program Files</variable><variable>PROMPT=$P$G</variable><variable>PSMODULEPATH=C:\Program Files\WindowsPowerShell\Modules;C:\Windows\system32\WindowsPowerShell\v1.0\Modules;C:\Program Files\Barracuda\Network Access Client\Modules</variable><variable>PUBLIC=C:\Users\Public</variable><variable>SESSIONNAME=Console</variable><variable>SSL_CERT_FILE=C:\dev\apama_win_full_latest\Apama\..\common\security\openssl\cert.pem</variable><variable>SYSTEMDRIVE=C:</variable><variable>SYSTEMROOT=C:\Windows</variable><variable>TEMP=C:\Users\y508970\AppData\Local\Temp</variable><variable>TMP=C:\Users\y508970\AppData\Local\Temp</variable><variable>USERDNSDOMAIN=EUR.AD.SAG</variable><variable>USERDOMAIN=EUR</variable><variable>USERDOMAIN_ROAMINGPROFILE=EUR</variable><variable>USERNAME=y508970</variable><variable>USERPROFILE=C:\Users\y508970</variable><variable>WINDIR=C:\Windows</variable></environment><version>10.5.0.0.357639</version></header>
YAML 000004a7 ###############################################################################
# $Copyright (c) 2016 Software AG, Darmstadt, Germany and/or Software AG USA Inc., Reston, VA, USA, and/or its subsidiaries and/or its affiliates and/or their licensors.$
# Use, reproduction, transfer, publication or disclosure is prohibited except as specifically provided for in your License Agreement with Software AG
###############################################################################

#To set the default log file and level for an EPL package, monitor, or event, specify
# logging details in the eplLogging section of the YAML configuration file.
#For example:
#eplLogging:
#  com.myCompany.Client:
#    file: apama/Client.log
#    level: DEBUG
#  com.myCompany.Internal: { level: ERROR }


#See the information on setting log files and log levels in a YAML configuration file in the documentation for more
# information about the supported options.
#To enable use of this file when you launch this project from Designer, edit the project's run/launch configuration,
#open the correlator, and tick the "Configuration" checkbox next to the textbox that names this .yaml file.
 00000055 C:\Users\y508970\workspace105\CoffeeFactoryDataSimulator\config\CorrelatorConfig.yaml
RAND 00000009 447145591
TIME 00000010 1568110210.865,1
CONN 0000003c 1907214234774601728:1920487100849782784 from 127.0.0.1:53720
TIME 0000000e 1568110212.1,1
MONF 00001379 
/** This event consists of events full of constants which are used in the RoastDrum.mon file */

event BeanColor{
	constant integer VERY_LIGHT := 90;
	constant integer LIGHT := 80;
	constant integer YELLOW := 70;
	constant integer BROWN := 60;
	constant integer VERY_BROWN := 40;
	constant integer BLACK := 20;
}

event AlertType{
	constant integer IMMINENT_FIRE := 1;
	constant integer FIRST_CRACK := 2;
	constant integer BROWN_STAGE := 3;
	constant integer FULL_CITY := 4;
	constant integer VIENA_COFFEE := 5;
	constant integer FULL_FRENCH := 6;
}

event BeanColorVolt{
	constant float MAXIMUM := 100.0; // = 10Volt DC -> green bean;
	constant float MINIMUM := 10.0; // = 1Volt DC -> extremely dark black bean;
}

event BeanTemp{
	// ALL values below are temperatures in celsius.
	//The names of the constants represent the color of the beans at the specific temperatures;
	constant float PALE := 131.0;
	constant integer LIGHT_BROWN := 198;
	constant integer MEDIUM_LIGHT_BROWN := 207;
	constant integer FULL_MEDIUM := 218;
	constant integer MEDIUM_DARK_BROWN := 223;
	constant integer DARK_BROWN := 229;
	constant integer VERY_DARK := 243;
	
}

event FreezerTemp{
	constant float RANDOM_FLUCTUATION_NUMBER := 1.5;
}

event FreezerDryer{ //TODO change name;
	constant float RANDOM_FLUCTUATION_NUMBER := 1.9;
	constant float MINIMUM_MOISTURE := 0.0;
}

event UserStatus{
	//The values represent the names of the queries that are passed to Prometheus
	//from which Grafana request them and uses their data;
	//Variables below are used in RoastDrum.mon
	constant string DRUM := "drum";
	constant string BEAN_COLOR := "beanColor";
	constant string BEAN_ILLUSTRATOR := "beanIllustrator";
	constant string ALERT := "alert";
	
	//Variables below are used in Extractor.mon
	constant string CAFFEINE := "caffeine";
	constant string VOLATILE_OILS := "volatileOils";
	constant string ORGANIC_ACIDS := "organicAcids";
	constant string EXTRACTOR_TEMP := "extractorTemp";
	constant string COFFEE_TO_WATER_RATIO := "coffeeToWater";
	
	constant string FREEZER_TEMP := "freezerTemp";
	
	constant string MOISTURE := "moisture";
}

event Channel{
	constant string ROAST := "roastChannel";
	constant string EXTRACTOR := "extractorChannel";
	constant string FREEZE := "freezeChannel";
	constant string FREEZE_DRYER := "freezeDryerChannel";
}

event Caffeine{
	// default values used to increase/decrease the height/length of the caffeine graph;
	constant float GRAPH_HEIGHT := 7.7;
	constant float GRAPH_LENGTH := 0.188;
}

event VolatileOils{
	// default values used to increase/decrease the height/length of the volatile oils graph;
	constant float GRAPH_HEIGHT := 5.19;
	constant float GRAPH_LENGTH := 0.0415;
}

event OrganicAcids{
	// default values used to increase/decrease the height/length of the organic graph;
	constant float GRAPH_HEIGHT := 3.11;
	constant float GRAPH_LENGTH := 0.0197;
}

event Math{
	constant float CUBED := 3.0;
	constant float PLANCK_FORMULA_SUBTRACTOR := -1.0; // bl
}

event Message{
	constant string LOADED_ROAST_SIMULATOR := "Loaded monitor RoastSimulator";
	constant string LOADED_EXTRACT_SIMULATOR := "Loaded monitor ExtractorSimulator";
	constant string LOADED_FREEZER_SIMULATOR := "Loaded monitor FreezerSimulator";
	constant string LOADED_FREEZE_DRYER_SIMULATOR := "Loaded monitor FreezerDryerSimulator";
}

event Time{
	constant float ADD_SECOND := 1.0;
}

event ExtractionBounds{ // bounds within the graph
	constant float MAXIMUM := 110.0;
	constant float MINIMUM := 0.0;
}

event Delay{
	constant float ONE_SECOND := 1.0;
	constant float TWO_SECONDS := 2.0;
	constant float THREE_SECONDS := 3.0;
}

event Temperature{
	constant float PREHEAT_NUMBER := 13.1; //A random number; The random number has to be lower than 20 and higher than 10;
	constant float DRUM_MINIMUM := 0.0;
	constant float IMMINENT_FIRE := 258.0; // temperature at which the beans will start going on fire;
	
	constant float EXTRACTOR_INITIAL := 140.0; // random number between 130 and 150;
	//Has to differ from the starting drum temp in RoastDrum because it looks better on Grafana;
	constant float EXTRACTOR_PREHEAT := 12.1;  //A random number; The random number has to be lower than 20 and higher than 10;
	
	constant float FREEZER_MAX := -60.0;
	constant float FREEZER_MIN := -20.0;
}

event ColorScheme{
	constant integer SIZE := 50; // the size of the color scheme graph on Grafana that is displaying the current color of the beans;
}

event Divider{
	constant integer BY_HALF := 2;
}

event BeanTracker{
	constant float COLOR_CHANGER := 0.9; // 
	constant float COLOR_GATE_ENTRY := 0.4; // representing the percent (e.g. 0.4 = 40%);
}

event BeanRandom{
	constant float TEMP_INCREMENTER := 1.8; // maximum random value;
	constant float GATE_BOUND := 1.0; // representing the maximum percent value(e.g. 1.0 = 100%, 0.9 = 90%);
}
 00000064 C:\Users\y508970\workspace105\CoffeeFactoryDataSimulator\eventdefinitions\CoffeeFactoryConstants.mon
MONF 00000cf1 
/** This monitor is responsible for ...  */

event CaffeineEvent{
	float currentCaffeine;
}

event VolatileOilsEvent{
	float currentVolatileOils;
}

event OrganicAcidsEvent{
	float currentOrganicAcids;
}

event ExtractorTemperature{
	float currentTemperature;
}

monitor ExtractorSimulator {

	float currentCaffeine := 1.0;
	float currentVolatileOils := 3.0;
	float currentOrganicAcids := 8.0;
	float currentTemp := preheatExtractor();
	float currentCoffeeToWaterRatio := 0.0;
	
	boolean highExtractionTemp := false; // used as a gate to decrease the temp;
	boolean lowExtractionTemp := true; // used as a gate to increase the temp;
	
	float caffeineTimeCounter := 0.0;
	float oilsTimeCounter := 0.0;
	float acidsTimeCounter := 0.0;
	
	//Side value => Amount of compound (Unit) - A
	
	action onload() {
		log Message.LOADED_EXTRACT_SIMULATOR at INFO;
		initialize();
	}

	action initialize(){
		implementExtractorTemp();
		extractAll();
	}

	action extractAll(){
		extractCaffeine();
		extractVolatileOils();
		extractOrganicAcids();
	}

	/** 
	...
	*/
	action extractCaffeine(){
		listener listen := on all wait (Delay.ONE_SECOND){
			currentCaffeine := blackBodyFormula(caffeineTimeCounter, Caffeine.GRAPH_HEIGHT, Caffeine.GRAPH_LENGTH);  
			send CaffeineEvent(currentCaffeine) to Channel.EXTRACTOR; 
			caffeineTimeCounter := caffeineTimeCounter + Time.ADD_SECOND;
		}
	}

	/** 
	...
	*/
	action extractVolatileOils(){
		listener listen := on all wait (Delay.ONE_SECOND){		
			currentVolatileOils := blackBodyFormula(oilsTimeCounter, VolatileOils.GRAPH_HEIGHT, VolatileOils.GRAPH_LENGTH);	
			send VolatileOilsEvent(currentVolatileOils) to Channel.EXTRACTOR; 
			oilsTimeCounter := oilsTimeCounter + Time.ADD_SECOND;
		}
	}
	
	/** 
	...
	*/	
	action extractOrganicAcids(){
		listener listen := on all wait (Delay.ONE_SECOND){
			currentOrganicAcids := blackBodyFormula(acidsTimeCounter, OrganicAcids.GRAPH_HEIGHT, OrganicAcids.GRAPH_LENGTH); 
			send OrganicAcidsEvent(currentOrganicAcids) to Channel.EXTRACTOR; 
			acidsTimeCounter := acidsTimeCounter + Time.ADD_SECOND;
		}
	}
	
	/** 
		Increases/decreases the temperature in the extractor drum;
		
	*/
	action implementExtractorTemp(){
		listener listen := on all wait (Delay.TWO_SECONDS){
			float randomTempIncrementor := (2.0).rand(); // TODO FIX MAGIC NUMBER;
			currentTemp := currentTemp + randomTempIncrementor;
			send ExtractorTemperature(currentTemp) to Channel.EXTRACTOR; 
		}
	}
	
	/** 
	@param time = the time that has passed in seconds;
	@param height = increase value for higher function and decrease for lower; 7.7 is a random default value;
	@param length = increase to shrink function, decrease to expand function; 0.188 is a random default value;
	@return Max Planck's formula for Black-body radition
	*/
	action blackBodyFormula(float time, float height, float length) returns float{
		return (height * (length * time).pow(Math.CUBED)) / ( (float.E).pow(length * time) - Math.PLANCK_FORMULA_SUBTRACTOR);
	}
	
	/** 
	...
	*/
	action updateCoffeeToWaterRatio(){	
		//send ... to ...
	}
	
	action preheatExtractor() returns float{
		return (Temperature.EXTRACTOR_PREHEAT).rand() + Temperature.EXTRACTOR_INITIAL;
	}
	
}
 00000058 C:\Users\y508970\workspace105\CoffeeFactoryDataSimulator\monitors\ExtractorSimulator.mon
MONF 000002aa 
/** This monitor is responsible for ...  */

event FreezerDryerEvent{
	float currentMoisture;
}

monitor FreezeDryerSimulator {

	float currentMoisture := 100.0;
	
	action onload() {
		initialize();
	}

	action initialize(){
		log Message.LOADED_FREEZE_DRYER_SIMULATOR at INFO;
		freezeDry();
	}
		
	action freezeDry(){
		listener listen := on all wait (Delay.TWO_SECONDS){
			float random := -(FreezerDryer.RANDOM_FLUCTUATION_NUMBER).rand();
			currentMoisture := currentMoisture + random;
			send FreezerDryerEvent(currentMoisture) to Channel.FREEZE_DRYER;
			log "Simulation FreezerDryer moisture: " + currentMoisture.toString() at INFO;

		}
	}
}
 0000005a C:\Users\y508970\workspace105\CoffeeFactoryDataSimulator\monitors\FreezeDryerSimulator.mon
MONF 0000044f 
/** This monitor is responsible for ...  */

event FreezerTemperature{
	float currentFreezerTemp;
}

monitor FreezerSimulator {
	
	float currentFreezerTemp := -50.0; // default freezer temperature;
	boolean flag := false; //When using the random variable we either decrease or
	//increase the current freezer temperature, using this variable we set the turns;

	action onload() {
		log Message.LOADED_FREEZER_SIMULATOR at INFO;
		freeze();
	}
	
	action freeze(){
		listener listen := on all wait (Delay.THREE_SECONDS){
			float randomTemp := getRandomTemp();	
			currentFreezerTemp := (currentFreezerTemp + randomTemp);
			send FreezerTemperature(currentFreezerTemp) to Channel.FREEZE;
			log "Simulation Freezer temp: " + currentFreezerTemp.toString() at INFO;

		}
	}
	
	action getRandomTemp() returns float{
		float randomTemp := (FreezerTemp.RANDOM_FLUCTUATION_NUMBER).rand();
		// below = take turns adding -> subtracting random values; 
		if flag {
			randomTemp := -randomTemp;
			flag := false;
		}else{
			flag := true;
		}
		return randomTemp;
	}
	
}
 00000056 C:\Users\y508970\workspace105\CoffeeFactoryDataSimulator\monitors\FreezerSimulator.mon
MONF 00000b95 
event ColorTrack{
	float currentBeanVolt;
}

event DrumTemperature{
	float currentDrumTemperature;
}

/** This monitor is responsible for ...  */
monitor RoastDrumSimulator {

	integer beanIllustrator := 1; //parses the number so the program can display the actual color of the bean in a range from 1 to 100; Where 1 is green and very black is 100;
	integer currentBeanTemp := 0; // average temp;

	float currentDrumTemp := preheatDrum(); // default temp in drum before roasting is just below 200, e.g. 190;
	float currentBeanVolt := BeanColorVolt.MAXIMUM; 
	
	boolean highRoastTemp := false; // used as a gate to decrease the temp;
	boolean lowRoastTemp := true; // used as a gate to increase the temp;
	
	action onload() {
		log Message.LOADED_ROAST_SIMULATOR at INFO;
		initialize();
	}

	action initialize(){
			heatDrum();
			colorTrack();
	}
	
	/** 
	@return ...
	*/
	action preheatDrum() returns float{
		return (Temperature.PREHEAT_NUMBER).rand() + BeanTemp.PALE;
	}
	
	/** 
		...
	*/
	action heatDrum(){		
		listener listen := on all wait (Delay.TWO_SECONDS){
			float randomTemp := (BeanRandom.TEMP_INCREMENTER).rand();				
			currentDrumTemp := (currentDrumTemp + randomTemp);
			send DrumTemperature(currentDrumTemp) to Channel.ROAST;
			log "Simulation RoastDrum temp: " + currentDrumTemp.toString() at INFO;

		}
	}	
	
	/** 
		....
	*/
	action colorTrack(){
		listener listen := on all wait (Delay.ONE_SECOND){
			float randomVoltIncrease := (BeanTracker.COLOR_CHANGER).rand(); // the beans spin while in the drum, therefore their temperature might differ slightly. Plus, making the graph more realistic;
			float gate := (BeanRandom.GATE_BOUND).rand();
			integer beanColorIllustrator := getBeanIllustrator(currentBeanVolt);

			implementBeanVolt(gate, randomVoltIncrease);
			send ColorTrack(currentBeanVolt) to Channel.ROAST;
			log "Simulation RoastDrum volt: " + currentBeanVolt.toString() at INFO;
		}
	}
	
	/** 
	@param gate ...
	@param randomVoltIncrease ...
	*/
	action implementBeanVolt(float gate, float randomVoltIncrease){
		if gate <= BeanTracker.COLOR_GATE_ENTRY {
			currentBeanVolt := currentBeanVolt + randomVoltIncrease;
		}else{
			currentBeanVolt := currentBeanVolt - BeanTracker.COLOR_CHANGER; // 0-100 Volts DC; 280 maximum temp in drum -> 280/100 = 2.8; Therefore, 2.8 decrease per degree celsius;
		}
	}
	
	/** 
	@param beanVolt ...
	@return ....
		formula: the color scheme graph contains half the range the beanvolt has
		(i.e. BeanVolt starts at 100 and goes down to 0, colorScheme starts at 0 and goes up to 50).
		Hence, get half of bean volt and remove 50 since the colorScheme operates in the 0-50 range;
	*/
	action getBeanIllustrator(float beanVolt) returns integer {
		return (getHalf(beanVolt) - ColorScheme.SIZE).abs(); 
	}
	
	action getHalf(float value) returns integer{
		return value.floor() / Divider.BY_HALF;
	}
}
  00000054 C:\Users\y508970\workspace105\CoffeeFactoryDataSimulator\monitors\RoastSimulator.mon
DISC 0000003c 1907214234774601728:1920487100849782784 from 127.0.0.1:53720
TIME 0000000e 1568110213.1,1
TIME 0000000e 1568110213.7,1
TIME 0000000e 1568110214.1,1
TIME 0000000e 1568110214.4,1
TIME 0000000e 1568110215.1,1
TIME 0000000e 1568110216.1,1
TIME 0000000e 1568110217.1,1
TIME 0000000e 1568110218.1,1
TIME 0000000e 1568110219.1,1
TIME 0000000e 1568110220.1,1
TIME 0000000e 1568110221.1,1
TIME 0000000e 1568110222.1,1
TIME 0000000e 1568110223.1,1
TIME 0000000e 1568110224.1,1
TIME 0000000e 1568110225.1,1
TIME 0000000e 1568110226.1,1
TIME 0000000e 1568110227.1,1
TIME 0000000e 1568110228.1,1
TIME 0000000e 1568110229.1,1
TIME 0000000e 1568110230.1,1
TIME 0000000e 1568110231.1,1
TIME 0000000e 1568110232.1,1
TIME 0000000e 1568110233.1,1
TIME 0000000e 1568110233.7,1
TIME 0000000e 1568110234.1,1
TIME 0000000e 1568110235.1,1
TIME 0000000e 1568110236.1,1
TIME 0000000e 1568110237.1,1
TIME 0000000e 1568110238.1,1
TIME 0000000e 1568110239.1,1
TIME 0000000e 1568110240.1,1
TIME 0000000e 1568110241.1,1
TIME 0000000e 1568110242.1,1
TIME 0000000e 1568110243.1,1
TIME 0000000e 1568110244.1,1
TIME 0000000e 1568110245.1,1
TIME 0000000e 1568110246.1,1
TIME 0000000e 1568110247.1,1
TIME 0000000e 1568110248.1,1
TIME 0000000e 1568110249.1,1
TIME 0000000e 1568110250.1,1
TIME 0000000e 1568110251.1,1
TIME 0000000e 1568110252.1,1
TIME 0000000e 1568110253.1,1
TIME 0000000e 1568110254.1,1
TIME 0000000e 1568110255.1,1
TIME 0000000e 1568110256.1,1
TIME 0000000e 1568110257.1,1
TIME 0000000e 1568110258.1,1
TIME 0000000e 1568110259.1,1
TIME 0000000e 1568110260.1,1
TIME 0000000e 1568110261.1,1
TIME 0000000e 1568110262.1,1
TIME 0000000e 1568110263.1,1
TIME 0000000e 1568110264.1,1
TIME 0000000e 1568110265.1,1
TIME 0000000e 1568110266.1,1
TIME 0000000e 1568110267.1,1
TIME 0000000e 1568110268.1,1
TIME 0000000e 1568110269.1,1
TIME 0000000e 1568110270.1,1
TIME 0000000e 1568110271.1,1
TIME 0000000e 1568110272.1,1
TIME 0000000e 1568110273.1,1
TIME 0000000e 1568110274.1,1
TIME 0000000e 1568110275.1,1
TIME 0000000e 1568110276.1,1
TIME 0000000e 1568110277.1,1
TIME 0000000e 1568110278.1,1
TIME 0000000e 1568110279.1,1
TIME 0000000e 1568110280.1,1
TIME 0000000e 1568110281.1,1
TIME 0000000e 1568110282.1,1
TIME 0000000e 1568110283.1,1
TIME 0000000e 1568110284.1,1
TIME 0000000e 1568110285.1,1
TIME 0000000e 1568110286.1,1
TIME 0000000e 1568110287.1,1
TIME 0000000e 1568110288.1,1
TIME 0000000e 1568110289.1,1
TIME 0000000e 1568110290.1,1
TIME 0000000e 1568110291.1,1
TIME 0000000e 1568110292.1,1
TIME 0000000e 1568110293.1,1
TIME 0000000e 1568110294.1,1
TIME 0000000e 1568110295.1,1
TIME 0000000e 1568110296.1,1
TIME 0000000e 1568110297.1,1
TIME 0000000e 1568110298.1,1
TIME 0000000e 1568110299.1,1
TIME 0000000e 1568110300.1,1
TIME 0000000e 1568110301.1,1
TIME 0000000e 1568110302.1,1
TIME 0000000e 1568110303.1,1
TIME 0000000e 1568110304.1,1
TIME 0000000e 1568110305.1,1
TIME 0000000e 1568110306.1,1
TIME 0000000e 1568110307.1,1
TIME 0000000e 1568110308.1,1
TIME 0000000e 1568110309.1,1
TIME 0000000e 1568110310.1,1
TIME 0000000e 1568110311.1,1
TIME 0000000e 1568110312.1,1
TIME 0000000e 1568110313.1,1
TIME 0000000e 1568110314.1,1
TIME 0000000e 1568110315.1,1
TIME 0000000e 1568110316.1,1
TIME 0000000e 1568110317.1,1
TIME 0000000e 1568110318.1,1
TIME 0000000e 1568110319.1,1
TIME 0000000e 1568110320.1,1
TIME 0000000e 1568110321.1,1
TIME 0000000e 1568110322.1,1
TIME 0000000e 1568110323.1,1
TIME 0000000e 1568110324.1,1
TIME 0000000e 1568110325.1,1
TIME 0000000e 1568110326.1,1
TIME 0000000e 1568110327.1,1
TIME 0000000e 1568110328.1,1
TIME 0000000e 1568110329.1,1
TIME 0000000e 1568110330.1,1
TIME 0000000e 1568110331.1,1
TIME 0000000e 1568110332.1,1
TIME 0000000e 1568110333.1,1
TIME 0000000e 1568110334.1,1
TIME 0000000e 1568110335.1,1
TIME 0000000e 1568110336.1,1
TIME 0000000e 1568110337.1,1
TIME 0000000e 1568110338.1,1
TIME 0000000e 1568110339.1,1
TIME 0000000e 1568110340.1,1
TIME 0000000e 1568110341.1,1
TIME 0000000e 1568110342.1,1
TIME 0000000e 1568110343.1,1
TIME 0000000e 1568110344.1,1
TIME 0000000e 1568110345.1,1
TIME 0000000e 1568110346.1,1
TIME 0000000e 1568110347.1,1
TIME 0000000e 1568110348.1,1
TIME 0000000e 1568110349.1,1
TIME 0000000e 1568110350.1,1
TIME 0000000e 1568110351.1,1
TIME 0000000e 1568110352.1,1
TIME 0000000e 1568110353.1,1
TIME 0000000e 1568110354.1,1
TIME 0000000e 1568110355.1,1
TIME 0000000e 1568110356.1,1
TIME 0000000e 1568110357.1,1
TIME 0000000e 1568110358.1,1
TIME 0000000e 1568110359.1,1
TIME 0000000e 1568110360.1,1
TIME 0000000e 1568110361.1,1
TIME 0000000e 1568110362.1,1
TIME 0000000e 1568110363.1,1
TIME 0000000e 1568110364.1,1
TIME 0000000e 1568110365.1,1
TIME 0000000e 1568110366.1,1
TIME 0000000e 1568110367.1,1
TIME 0000000e 1568110368.1,1
TIME 0000000e 1568110369.1,1
TIME 0000000e 1568110370.1,1
TIME 0000000e 1568110371.1,1
TIME 0000000e 1568110372.1,1
TIME 0000000e 1568110373.1,1
TIME 0000000e 1568110374.1,1
TIME 0000000e 1568110375.1,1
TIME 0000000e 1568110376.1,1
TIME 0000000e 1568110377.1,1
TIME 0000000e 1568110378.1,1
TIME 0000000e 1568110379.1,1
TIME 0000000e 1568110380.1,1
TIME 0000000e 1568110381.1,1
TIME 0000000e 1568110382.1,1
TIME 0000000e 1568110383.1,1
TIME 0000000e 1568110384.1,1
TIME 0000000e 1568110385.1,1
TIME 0000000e 1568110386.1,1
TIME 0000000e 1568110387.1,1
